"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" General
" See http://amix.dk/vim/vimrc.html
" Reload vimrc :source .vimrc
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Plug plugin manager
call plug#begin()
Plug 'tpope/vim-sensible'
Plug 'bling/vim-airline'
Plug 'tpope/vim-fugitive'
Plug 'ctrlpvim/ctrlp.vim'
Plug 'scrooloose/nerdtree', { 'on':  'NERDTreeToggle' }
Plug 'scrooloose/syntastic'
Plug 'majutsushi/tagbar'
Plug 'vimwiki/vimwiki'
Plug 'klen/python-mode'
Plug 'jmcantrell/vim-virtualenv'
Plug 'godlygeek/tabular' | Plug 'plasticboy/vim-markdown'
Plug 'SirVer/ultisnips' | Plug 'honza/vim-snippets'
Plug 'Glench/Vim-Jinja2-Syntax'
Plug 'groenewege/vim-less'
Plug 'pearofducks/ansible-vim'
Plug 'chriskempson/base16-vim'
call plug#end()

" How many lines of history VIM has to remember
set history=700

" Required by vimwiki
set nocompatible
syntax on

" Enable filetype plugin
filetype plugin on
filetype indent on

" Set to auto read when a file is changed from the outside
set autoread

set ignorecase "Ignore case when searching
set smartcase
set hlsearch "Highlight search things

set encoding=utf8

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Shortcuts
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" With a map leader it's possible to do extra key combinations
" like <leader>w saves the current file
let mapleader = ","
let g:mapleader = ","
" New vertical window with new file
:map <leader>n :vnew<cr> 
" Split current horizontally
:map <leader>v <c-w>s
" Split current vertically
:map <leader>s <c-w>v
" Close current window
:map <leader>q :q<cr>
:map <leader>qq :qa<cr>
" Move cursor between windows
:map <leader>j <c-w>j
:map <leader>k <c-w>k
:map <leader>h <c-w>h
:map <leader>l <c-w>l
" Rotate windows
:map <leader>r <c-w>r
" Resizing windows horizontally and vertically
:map <leader>= <c-w>=
" Toggle nerdtree
:map <leader>f :NERDTreeToggle<cr>
" Toggle tagbar
:map <leader>g :TagbarToggle<cr>
" New tab
:map <leader>t :tabnew<cr>
" Go to tabs
:map <leader>1 :tabn 1<cr>
:map <leader>2 :tabn 2<cr>
:map <leader>3 :tabn 3<cr>
:map <leader>4 :tabn 4<cr>
:map <leader>5 :tabn 5<cr>
:map <leader>6 :tabn 6<cr>
" Fold and unfold
nnoremap <space> za
" Syntax checking: syntastic toggle active mode
:map <leader>c :SyntasticToggleMode<cr>

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Text, tab and indent related
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
set expandtab
set shiftwidth=4
set tabstop=4
set smarttab

autocmd FileType javascript,css,less,html setlocal shiftwidth=2 tabstop=2
"autocmd FileType less setlocal shiftwidth=2 tabstop=2
"autocmd FileType html setlocal shiftwidth=2 tabstop=2

set lbr
set tw=500

set ai "Auto indent
set si "Smart indent

" Always show the statusline
set laststatus=2

" Code Folding, everything folded by default
set foldmethod=indent
set foldlevel=99 " Nothing folded
set foldnestmax=2
"set foldenable

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Misc
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" colorscheme
set background=dark
colorscheme base16-solarized

" Disable auto-folding in vim-markdown
let g:vim_markdown_folding_disabled=1

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Syntastic
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" use psr2 coding standard for phpcs
let g:syntastic_phpcs_conf="--standard=PSR2"

" disable syntastic on python (python-mode already used)
let g:syntastic_mode_map = {
    \ "mode": "active",
    \ "active_filetypes": [],
    \ "passive_filetypes": ["python"]
\}

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Vimwiki
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let wiki = {}
let wiki.maxhi=1 "Highlight vimwiki broken links
"Syntax highlight
let wiki.nested_syntaxes = {'python': 'python', 'sql': 'sql', 'java': 'java'}
let g:vimwiki_list = [wiki]
"Folding
let g:vimwiki_folding=1

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" ctags / tagbar
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:tagbar_type_vimwiki = {
    \'ctagstype': 'vimwiki',
    \'kinds': [
        \'h:header',
    \],
    \'sort': 0
\}

let g:tagbar_type_mkd = {
    \ 'ctagstype' : 'markdown',
    \ 'kinds' : [
        \ 'h:header'
    \ ],
\ 'sort' : 0,
\ }

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Python mode
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Run pylint on every save
let g:pymode_lint_unmodified = 1
" Pylint configuration file
let g:pymode_lint_config = '$HOME/.pylint.rc'

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" NERDTree
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:NERDTreeIgnore = ['\.pyc$', '__pycache__']

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" CtrlP
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
let g:ctrlp_custom_ignore = {
    \ 'file': '\v\.(pyc|egg)$'
\}

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Vim-Airline
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" enable tabline
let g:airline#extensions#tabline#enabled = 1
" powerline fonts
let g:airline_powerline_fonts = 1
